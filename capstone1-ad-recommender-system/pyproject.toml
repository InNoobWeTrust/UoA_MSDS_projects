[tool.poetry]
name = "ad-recommender-flask"
version = "0.1.0"
description = "UoA Capstone Project 1 - Ad Recommender System"
authors = ["Vu Truong <forbidden.gun@gmail.com>"]

[tool.poe.tasks]
# Export notebooks to pdf
nbconvert.shell = "cd colab-notebooks && jupyter nbconvert --to webpdf *.ipynb && mv *.pdf ../doc/pdf/"

# Development serve
dev.shell = "flask run --debug"
streamlit-run.shell = "streamlit run ad_rec_streamlit.py"
docker-build.shell = "docker buildx build --platform=linux/amd64 -t ad-rec-flask ."
docker-run.shell = "docker run --platform=linux/amd64 --rm -d -p 80:80 --name ad-rec-flask ad-rec-flask"
docker-stop.shell = "docker stop ad-rec-flask"
docker-log.shell = "docker logs ad-rec-flask"
docker-dev = ["docker-build", "docker-run"]

# AWS deployment
push-docker-s3.shell = "docker save -o ad-rec-flask.tar ad-rec-flask:latest && set -o allexport && source aws-deploy/.env && set +o allexport && aws s3 cp ad-rec-flask.tar s3://${S3_BUCKET}/docker-registry/ad-rec-flask.tar"
push-docker-s3.envfile = "aws-deploy/.env"
aws-setup-security-group.shell = "cd aws-deploy && ./setup-security-group.sh"
aws-cleanup-security-group.shell = "cd aws-deploy && aws ec2 delete-security-group --group-name Ec2SshHttp"
aws-start-ec2-instance.shell = "cd aws-deploy && ./start-ec2-instance.sh"
aws-terminate-ec2-instance.shell = "cd aws-deploy && cat instance.txt | tr '\n' ' ' | xargs -I {} aws ec2 terminate-instances --instance-ids {}"

# Dev tools
test.shell = "pytest -s -v"
ruff-fix.shell = "ruff format ."

[tool.poetry.dependencies]
python = ">=3.9,!=3.9.7,<3.11"
flask = "^3.0.0"
pandas = "1.5.3"
scikit-learn = "1.2.2"
dill = "^0.3.7"
typing-extensions = "^4.8.0"
xgboost = "^2.0.2"
gunicorn = "^21.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
poethepoet = "^0.13.1"
ruff = "^0.1.5"
icecream = "^2.1.3"
streamlit = "^1.28.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
